<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
  <!-- scan the package and the sub package -->

  <context:component-scan base-package="com.jefflee" />
  <!-- don't handle the static resource -->
  <mvc:default-servlet-handler />
  <!-- if you use annotation you must configure following setting -->
  <mvc:annotation-driven>
    <!-- 解决中文乱码问题 -->
    <mvc:message-converters register-defaults="true">
      <bean class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
      </bean>
    </mvc:message-converters>
  </mvc:annotation-driven>
  <!-- configure the InternalResourceViewResolver -->
  <bean id="internalResourceViewResolver"
    class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <!-- 前缀 -->
    <property name="prefix" value="/WEB-INF/" />
    <!-- 后缀 -->
    <property name="suffix" value=".jsp" />
  </bean>
  <!-- 读取参数配置 -->
  <bean id="propertyConfigurer"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath:dbconfig.properties</value>
      </list>
    </property>
  </bean>
  <!-- 配置SqlSessionTemplate -->  
  <!-- <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">  
    <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />  
  </bean> -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
    <property name="dataSource" ref="dataSource" />
  </bean>
  <!-- 配置mybatis -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.jefflee.mapper" />
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
  </bean>
  <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.jefflee.mapper" />
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    <!-- <property name="properties">
        <value>
            mappers=tk.mybatis.mapper.common.Mapper
            IDENTITY=select uuid()
            ORDER=BEFORE
        </value>
    </property> -->
  </bean>
  <!-- 阿里 druid数据库连接池 -->
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
    destroy-method="close">
    <!-- 数据库基本信息配置 -->
    <property name="url" value="${url}" />
    <property name="username" value="${username}" />
    <property name="password" value="${password}" />
    <property name="driverClassName" value="${driverClassName}" />
    <property name="filters" value="${filters}" />
    <!-- 最大并发连接数 -->
    <property name="maxActive" value="${maxActive}" />
    <!-- 初始化连接数量 -->
    <property name="initialSize" value="${initialSize}" />
    <!-- 配置获取连接等待超时的时间 -->
    <property name="maxWait" value="${maxWait}" />
    <!-- 最小空闲连接数 -->
    <property name="minIdle" value="${minIdle}" />
    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
    <property name="validationQuery" value="${validationQuery}" />
    <property name="testWhileIdle" value="${testWhileIdle}" />
    <property name="testOnBorrow" value="${testOnBorrow}" />
    <property name="testOnReturn" value="${testOnReturn}" />
    <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
    <!-- 打开removeAbandoned功能 -->
    <property name="removeAbandoned" value="${removeAbandoned}" />
    <!-- 1800秒，也就是30分钟 -->
    <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
    <!-- 关闭abanded连接时输出错误日志 -->
    <property name="logAbandoned" value="${logAbandoned}" />
  </bean>


  <!-- 资源映射 -->
  <mvc:resources location="/css/" mapping="/css/**"/>
  <mvc:resources location="/js/" mapping="/js/**"/>
  <mvc:resources location="/layui/" mapping="/layui/**"/>
  <mvc:resources location="/json/" mapping="/json/**"/>
  <mvc:resources location="/WEB-INF/page/" mapping="/page/**"/>

  <!--启动对@AspectJ注解的支持，以输出日志-->
  <aop:aspectj-autoproxy/>
  <mvc:annotation-driven></mvc:annotation-driven>
  <aop:aspectj-autoproxy proxy-target-class="true" />
  <aop:config proxy-target-class="true"/>
  <!-- 开启shiro注解支持 -->
  <bean
          class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    <property name="securityManager" ref="securityManager" />
  </bean>
  <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    <property name="exceptionMappings">
      <props>
        <prop key="org.apache.shiro.authz.AuthorizationException">redirect:/sys/401</prop>
        <prop key="org.apache.shiro.authz.UnauthorizedException">redirect:/sys/refuse</prop>
      </props>
    </property>
  </bean>

  <!-- 定义文件上传解析器 -->
  <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!-- 设定默认编码 -->
    <property name="defaultEncoding" value="UTF-8"></property>
    <!-- 设定文件上传的最大值5MB，5*1024*1024 -->
    <property name="maxUploadSize" value="5242880"></property>
  </bean>

</beans>